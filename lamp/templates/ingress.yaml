{{- if .Values.ingress.enabled -}}
{{- $fullName := include "lamp.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name:  {{ $fullName }}
  annotations:
    {{- if .Values.ingress.ssl }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- if .Values.ingress.htpasswdString }}
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: {{ template "lamp.fullname" . }}
    ingress.kubernetes.io/auth-realm: "Authenticate"
    {{- end }}
    {{- if .Values.ingress.subdomainWWW }}
    ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(.*)$ $scheme://www.{{ template "lamp.domain" . }}$1;
    {{- end }}
spec:
  {{- if .Values.ingress.ssl }}
  tls:
  - secretName: {{ template "lamp.fullname" . }}-tls-app
    hosts:
    - {{ template "lamp.domain" . }}
  {{- end }}
  rules:
  - host: {{ template "lamp.domain" . }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  {{ template "lamp.fullname" . }}
            port:
              number: {{ .Values.service.HTTPPort }}
{{- end }}
